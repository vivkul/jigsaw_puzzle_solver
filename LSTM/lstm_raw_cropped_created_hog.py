from keras.models import Sequential
import numpy as np
from keras.layers.recurrent import SimpleRNN , GRU , LSTM
from keras.layers.core import TimeDistributedDense , Activation , Dropout
import prepare_data_raw_cropped_created_hog
from prepare_data_raw_cropped_created_hog import num_vectors,num_dims,timesteps
import pickle

n_in_out=num_dims	
n_hidden=500
n_samples=num_vectors
n_timesteps=timesteps-1


with open('X_T_raw_cropped_created_hog.pickle', 'rb') as handle:
	X_T = pickle.load(handle)

with open('Y_T_raw_cropped_created_hog.pickle', 'rb') as handle:
	Y_T = pickle.load(handle)

with open('X_all_T_raw_cropped_created_hog.pickle', 'rb') as handle:
	X_all_T = pickle.load(handle)

model=Sequential()

model.add(LSTM( n_hidden , input_dim=n_in_out , return_sequences=True	))
model.add(TimeDistributedDense(n_in_out , input_dim = n_hidden ))
model.add(Dropout(0.25))
model.compile(loss='mse',optimizer='rmsprop')
#model.compile(loss='mse',optimizer='sgd')
#X=np.random.random( ( n_samples , n_timesteps , n_in_out  )  )
#Y=np.random.random( ( n_samples , n_timesteps , n_in_out  )  )


#Xp=model._predict( X_T)

model.fit(X_T,Y_T,nb_epoch=3000)


### Trying to get the final list of outputs generated by the learnt model

#Xr=model.predict(X_all_T)
Xr=model.predict(Y_T)

with open('Results_raw_cropped_created_hog.pickle','wb') as handle:
	pickle.dump(Xr,handle)
	

print "Xr.shape"
print Xr.shape

#print "Xp.shape"
#print Xp.shape

print "n_in_out"
print num_dims	
print "n_samples"
print num_vectors

print "n_timesteps"
print timesteps-1
